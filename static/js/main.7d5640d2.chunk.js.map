{"version":3,"sources":["redux/contacts/contactActions.js","components/Button/Button.style.js","components/Button/Button.js","components/Form/Form.style.js","components/Form/Form.js","components/Contacts/Contacts.style.js","redux/contacts/contactsSelectors.js","components/Contacts/Contacts.js","components/Filter/Filter.style.js","components/Filter/Filter.js","components/Section/Section.js","App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js"],"names":["addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","CustomButton","styled","button","Button","type","text","onClick","CustomForm","form","Input","input","Form","useState","setName","setNumber","dispatch","useDispatch","nameInputId","numInputId","reset","handleChange","e","currentTarget","value","onSubmit","preventDefault","contactActions","htmlFor","placeholder","pattern","title","required","onChange","Container","div","ContactList","ul","Item","li","TextP","p","NameSpan","span","DelBtn","getFilter","state","phoneBook","filter","getVisibleContacts","contacts","getContacts","normalizeContacts","toLowerCase","contact","includes","Contacts","useSelector","map","onDeleteContact","Filter","target","Section","children","App","className","createReducer","actions","find","alert","cont","_","action","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistore","persistStore","ReactDOM","render","StrictMode","loading","persistor","document","getElementById"],"mappings":"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","file":"static/js/main.7d5640d2.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\nimport shortid from 'shortid';\r\n\r\nconst addContact = createAction('contacts/Add', ({ name, number }) => {\r\n  return {\r\n    payload: {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    },\r\n  };\r\n});\r\n\r\nconst deleteContact = createAction('contacts/Delete');\r\n\r\nconst changeFilter = createAction('contacts/ChangeFilter');\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { addContact, deleteContact, changeFilter };","import styled from \"@emotion/styled\";\n\nexport const CustomButton = styled.button`\n  width: 150px;\n  height: 20px;\n  cursor: pointer;\n  background-color: green;\n  border-radius: 50px;\n`;\n","import React from \"react\";\nimport { CustomButton } from \"./Button.style\";\n\nfunction Button({ type, text, onClick }) {\n  return (\n    <CustomButton type={type} onClick={onClick}>\n      {text}\n    </CustomButton>\n  );\n}\n\nexport default Button;\n","import styled from \"@emotion/styled\";\n\nexport const CustomForm = styled.form`\n  display: inline-flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Input = styled.input`\n  border-style: dashed;\n  border-color: aqua;\n  outline-color: tomato;\n  margin-bottom: 15px;\n`;\n","import { useState } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport contactActions from '../../redux/contacts/contactActions';\nimport Button from \"../Button/Button\";\nimport shortid from \"shortid\";\nimport { CustomForm, Input } from \"./Form.style\";\n\nfunction Form() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const dispatch = useDispatch();\n  \n  const nameInputId = shortid.generate();\n  const numInputId = shortid.generate();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(contactActions.addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <CustomForm onSubmit={handleSubmit}>\n      <label htmlFor={nameInputId}>\n        <Input\n          id={nameInputId}\n          placeholder=\"Name\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n          value={name}\n        />\n      </label>\n      <label htmlFor={numInputId}>\n        <Input\n          id={numInputId}\n          placeholder=\"Tel\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n          value={number}\n        />\n      </label>\n      <Button text=\"Add contact\" type=\"submit\" />\n    </CustomForm>\n  );\n}\n\nexport default Form;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  border-style: dotted;\n  display: inline-block;\n  padding-left: 15px;\n  padding-right: 30px;\n`;\n\nexport const ContactList = styled.ul`\n  display: inline-block;\n  list-style-type: decimal;\n  font-size: x-large;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  margin-right: 15px;\n`;\n\nexport const TextP = styled.p`\n  font-size: x-large;\n  margin-right: 20px;\n`;\n\nexport const NameSpan = styled.span`\n  font-weight: bold;\n  font-family: sans-serif;\n`;\n\nexport const DelBtn = styled.button`\n  background-color: red;\n  border-radius: 45%;\n  width: 60px;\n  height: 30px;\n\n  cursor: pointer;\n`;\n","export const getContacts = state => state.phoneBook.contacts;\r\n\r\nexport const getFilter = state => state.phoneBook.filter;\r\n\r\nexport const getVisibleContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizeContacts = filter.toLowerCase();\r\n\r\n  return contacts.filter(\r\n    contact =>\r\n      contact.name.toLowerCase().includes(normalizeContacts) ||\r\n      contact.number.includes(filter),\r\n  );\r\n};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Container,\n  ContactList,\n  Item,\n  NameSpan,\n  TextP,\n  DelBtn,\n} from \"./Contacts.style\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport contactActions from '../../redux/contacts/contactActions';\nimport { getVisibleContacts } from '../../redux/contacts/contactsSelectors';\n\nfunction Contacts() {\n  \n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n  const onDeleteContact = id => dispatch(contactActions.deleteContact(id));\n\n  return (\n    <Container>\n      <ContactList>\n        {contacts.map(({ id, name, number }) => (\n          <Item key={id}>\n            <TextP>\n              <NameSpan>{name}</NameSpan>: {number}\n            </TextP>\n            <DelBtn type=\"button\" onClick={() => onDeleteContact(id)}>\n              Delete\n            </DelBtn>\n          </Item>\n        ))}\n      </ContactList>\n    </Container>\n  );\n}\n\nexport default Contacts;\n\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  margin-bottom: 15px;\n`;\n\nexport const TextP = styled.p`\n  margin-top: 0px;\n  margin-bottom: 0px;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/contacts/contactsSelectors';\nimport contactActions from '../../redux/contacts/contactActions';\nimport { Container, TextP } from \"./Filter.style\";\n\nfunction Filter() {\n   const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n  return (\n    <Container>\n      <TextP>Find contacts by name</TextP>\n      <input\n        placeholder=\"Search\"\n        type=\"text\"\n        value={value}\n        onChange={e => dispatch(contactActions.changeFilter(e.target.value))}\n      />\n    </Container>\n  );\n}\n\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Section({ title, children }) {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import Form from \"./components/Form/Form\";\nimport Contacts from \"./components/Contacts/Contacts\";\nimport Filter from \"./components/Filter/Filter\";\nimport Section from \"./components/Section/Section\";\n// import useLocalStorage from \"./hooks/useLocalStorage\";\n\n// import { v4 as unId } from \"uuid\";\nimport \"./App.css\";\n\nfunction App() {\n  // const [contacts, setContacts] = useLocalStorage(\"contacts\", [\n  //   { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  //   { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  //   { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  //   { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  // ]);\n  // const [filter, setFilter] = useLocalStorage(\"filter\", \"\");\n\n  // const checkName = (contact, contacts) =>\n  //   contacts.find((cont) =>\n  //     cont.name.toLowerCase().includes(contact.name.toLowerCase())\n  //   );\n\n  // const checkNumber = (contact, contacts) =>\n  //   contacts.find((cont) => cont.number.includes(contact.number));\n\n  // const addContact = (e) => {\n  //   const contact = {\n  //     id: unId(),\n  //     name: e.name,\n  //     number: e.number,\n  //   };\n  //   checkName(contact, contacts)\n  //     ? alert(`${contact.name} is already in your list`)\n  //     : checkNumber(contact, contacts)\n  //     ? alert(`${contact.number} is already in your list`)\n  //     : setContacts([contact, ...contacts]);\n  // };\n\n  // const deleteContact = (contactId) => {\n  //   setContacts((prevState) =>\n  //     prevState.filter((contact) => contact.id !== contactId)\n  //   );\n  // };\n\n  // const changeFilter = (value) => setFilter(value);\n\n  // const getVisibleContacts = () => {\n  //   const normalizedFilter = filter.toLowerCase();\n\n  //   return contacts.filter((contact) =>\n  //     contact.name.toLowerCase().includes(normalizedFilter)\n  //   );\n  // };\n\n  return (\n    <div className=\"mainContainer\">\n      <Section title=\"Phonebook\">\n        <Form  />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter/>\n        <Contacts/>\n      </Section>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport actions from './contactActions';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nconst addContact = (state, { payload }) => {\r\n  if (state.find(contact => contact.number === payload.number)) {\r\n    alert(`'${payload.number}' is already in your list`);\r\n    return state;\r\n  }\r\n  if (\r\n    state.find(\r\n      contact => contact.name.toLowerCase() === payload.name.toLowerCase(),\r\n    )\r\n  ) {\r\n    alert(`'${payload.name}' is already in your list`);\r\n    return state;\r\n  }\r\n  alert(`'${payload.name}' added to phonebook`);\r\n  return [...state, payload];\r\n};\r\n\r\nconst deleteContact = (state, { payload }) => {\r\n  alert(`Contact deleted`);\r\n  return state.filter(cont => cont.id !== payload);\r\n};\r\n\r\nconst contacts = createReducer([\r\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n  ], {\r\n  [actions.addContact]: addContact,\r\n  [actions.deleteContact]: deleteContact,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { logger } from 'redux-logger';\r\nimport contactsReducer from './contacts/contactsReducer';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'phoneBook',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phoneBook: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\nconst persistore = persistStore(store);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistore };","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from './redux/store';\nimport { PersistGate } from \"redux-persist/integration/react\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistore}>\n      <App/>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}